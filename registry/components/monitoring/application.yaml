apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: monitoring
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "10"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 66.1.1
    helm:
      valuesObject:
        prometheus:
          prometheusSpec:
            additionalScrapeConfigs:
              - job_name: garden
                static_configs:
                  - targets:
                      - garden:3000
              - job_name: greenhouse
                static_configs:
                  - targets:
                      - greenhouse:3000
        grafana:
          dashboardProviders:
            dashboardproviders.yaml:
              apiVersion: 1
              providers:
                - name: "default"
                  orgId: 1
                  folder: ""
                  type: file
                  disableDeletion: false
                  editable: true
                  options:
                    path: /var/lib/grafana/dashboards/default
          dashboardsConfigMaps:
            default: grafana-dashboards
          extraSecretMounts:
            - name: credentials
              secretName: credentials
              defaultMode: 0440
              mountPath: /etc/secrets/credentials
              readOnly: true
          grafana.ini:
            auth:
              disable_login_form: true
              oauth_auto_login: false
            auth.generic_oauth:
              enabled: true
              name: OIDC
              allow_assign_grafana_admin: true
              client_id: $__file{/etc/secrets/credentials/client_id}
              client_secret: $__file{//etc/secrets/credentials/client_secret}
              api_url: https://oidc.simonemms.com/userinfo
              auth_url: https://oidc.simonemms.com/auth
              token_url: https://oidc.simonemms.com/token
              role_attribute_path: GrafanaAdmin
              # role_attribute_path: |-
              #   role_attribute_path = contains(info.groups[*], 'admin') && 'Admin' || contains(info.groups[*], 'editor') && 'Editor' || 'Viewer'
              scopes: openid email profile groups offline_access
              skip_org_role_sync: true
              tls_skip_verify_insecure: false
            security:
              disable_initial_admin_creation: true
            server:
              domain: grafana.simonemms.com
              root_url: "https://%(domain)s"
          persistence:
            enabled: false
            type: statefulset
          podAnnotations:
            configmap.reloader.stakater.com/reload: grafana-dashboards
            secret.reloader.stakater.com/reload: credentials
          ingress:
            enabled: true
            annotations:
              kubernetes.io/tls-acme: "true"
              cert-manager.io/cluster-issuer: letsencrypt
              gethomepage.dev/description: Grafana dashboards
              gethomepage.dev/enabled: "true"
              gethomepage.dev/group: Cluster Management
              gethomepage.dev/icon: grafana
              gethomepage.dev/name: Grafana
              # Pod selector required because names don't match
              gethomepage.dev/pod-selector: app.kubernetes.io/name=grafana
            ingressClassName: nginx
            hosts:
              - grafana.simonemms.com
            tls:
              - hosts:
                  - grafana.simonemms.com
                secretName: grafana-tls
          sidecar:
            dashboards:
              enabled: true
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
