apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: monitoring
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "10"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 66.1.1
    helm:
      valuesObject:
        alertmanager:
          alertmanagerSpec:
            resources:
              requests:
                cpu: 25m
                memory: 50Mi
              limits:
                cpu: 50m
                memory: 100Mi
        prometheusOperator:
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 200m
              memory: 200Mi
        prometheus-node-exporter:
          resources:
            requests:
              cpu: 100m
              memory: 30Mi
            limits:
              cpu: 200m
              memory: 50Mi
        kube-state-metrics:
          resources:
            requests:
              cpu: 10m
              memory: 32Mi
            limits:
              cpu: 100m
              memory: 64Mi
        prometheus:
          prometheusSpec:
            resources:
              requests:
                cpu: 250m
                memory: 400Mi
              limits:
                cpu: 500m
                memory: 600Mi
            additionalScrapeConfigs:
              - job_name: garden
                static_configs:
                  - targets:
                      - garden:3000
              - job_name: greenhouse
                static_configs:
                  - targets:
                      - greenhouse:3000
        grafana:
          admin:
            existingSecret: credentials
          dashboardProviders:
            dashboardproviders.yaml:
              apiVersion: 1
              providers:
                - name: "default"
                  orgId: 1
                  folder: ""
                  type: file
                  disableDeletion: false
                  editable: true
                  options:
                    path: /var/lib/grafana/dashboards/default
          dashboardsConfigMaps:
            default: grafana-dashboards
          grafana.ini:
            server:
              domain: grafana.simonemms.com
              root_url: "https://%(domain)s"
          persistence:
            enabled: true
            type: statefulset
          podAnnotations:
            configmap.reloader.stakater.com/reload: grafana-dashboards
          ingress:
            enabled: true
            annotations:
              kubernetes.io/tls-acme: "true"
              cert-manager.io/cluster-issuer: letsencrypt
              gethomepage.dev/description: Grafana dashboards
              gethomepage.dev/enabled: "true"
              gethomepage.dev/group: Cluster
              gethomepage.dev/icon: grafana
              gethomepage.dev/name: Grafana
              # Pod selector required because names don't match
              gethomepage.dev/pod-selector: app.kubernetes.io/name=grafana
              gethomepage.dev/widget.type: grafana
              gethomepage.dev/widget.url: http://monitoring-grafana.monitoring.svc.cluster.local
              gethomepage.dev/widget.username: admin
              gethomepage.dev/widget.password: "{{ `{{HOMEPAGE_VAR_GRAFANA_PASSWORD}}` }}" # Annotations are apparently parsed through Helm
            ingressClassName: nginx
            hosts:
              - grafana.simonemms.com
            tls:
              - hosts:
                  - grafana.simonemms.com
                secretName: grafana-tls
          sidecar:
            dashboards:
              enabled: true
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                cpu: 200m
                memory: 256Mi
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
